{"version":3,"file":"component---src-pages-index-js-5fe2eae38fc1734e06c2.js","mappings":"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","sources":["webpack://warframe-checklist/./src/components/checklistItem.js","webpack://warframe-checklist/./src/components/warframesTab.js","webpack://warframe-checklist/./src/components/weaponsTab.js","webpack://warframe-checklist/./src/components/companionsTab.js","webpack://warframe-checklist/./src/components/archwingTab.js","webpack://warframe-checklist/./src/pages/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst ChecklistCard = ({\r\n  name,\r\n  imageName,\r\n  components = [],\r\n  wiki = [],\r\n  isSelected,\r\n  onSelectionChange,\r\n}) => {\r\n  const [checkedComponents, setCheckedComponents] = useState({});\r\n  const localStorageKey = `components-${name}`;\r\n  const cardKey = `card-${name}`;\r\n\r\n  const filteredComponents = [\"Neurodes\", \"Detonite Injector\", \"Mutagen Mass\", \"Fieldron\", \"Thrax Plasm\", \r\n    \"Ferrite\", \"Entrati Lanthorn\", \"Fate Pearl\", \"Aggristone\", \"Kovnik\", \"Rune Marrow\", \"Silphsela\", \r\n    \"Cabochon Embolos\", \"Trapezium Xenorhast\", \"Efervon Sample\", \"HöLlvanian Pitchweave Fragment\", \r\n    \"Techrot Chitin\", \"Techrot Motherboard\", \"Maw Fang\", \"Saggen Pearl\", \"Yao Shrub\", \"Carbides\", \"Isos\",\r\n    \"Nullstones\", \"Titanium\", \"Heart Noctrul\", \"Tepa Nodule\", \"Tromyzon Entroplasma\", \"Nitain Extract\", \r\n    \"Forma\", \"Ocular Stem-Root\", \"Scintillant\", \"Stellated Necrathene\", \"Connla Sprout\", \"Nacreous Pebble\", \r\n    \"Tasoma Extract\", \"Entrati Obols\", \"Necracoil\", \"Shrill Voca\", \"Repeller Systems\", \"Voidgel Orb\", \r\n    \"Voidplume Pinion\", \"Voidplume Quill\", \"Atmo Systems\", \"Echo Voca\", \"Auroxium Alloy\", \"Breath Of The Eidolon\", \r\n    \"Esher Devar\", \"Mawfish Bones\", \"Coprite Alloy\", \"Narmer Isoplast\", \"Radiant Zodian\", \r\n    \"Longwinder Lathe Coagulant\", \"Mytocardia Spore\", \"Star Amarast\", \"Fersteel Alloy\", \"Charamote Sagan Module\", \r\n    \"Thermal Sludge\", \"Venerdo Alloy\", \"Eidolon Shard\", \"Orokin Ducats\", \"Lua Thrax Plasm\", \"Intact Sentient Core\", \r\n    \"Gyromag Systems\", \"Devolved Namalon\", \"Parasitic Tethermaw\", \"Grokdrul\", \"Spinal Core Section\", \"Pathos Clamp\", \r\n    \"Cranial Foremount\", \"Dracroot\", \"Lamentus\", \"Eevani\", \"Hespazym Alloy\", \"Seriglass Shard\", \"Anomaly Shard\", \r\n    \"Exceptional Sentient Core\", \"Iradite\", \"Mortus Horn\", \"Purified Heciphron\", \"Tempered Bapholite\", \r\n    \"Eye-Eye Rotoblade\", \"Marquise Thyst\", \"Mirewinder Parallel Biode\", \"Sapcaddy Venedo Case\", \"Radian Sentirum\", \r\n    \"Recaster Neural Relay\", \"Star Crimzian\", \"Synathid Ecosynth Analyzer\", \"Gorgaricus Spore\", \"Goblite Tears\", \r\n    \"Travocyte Alloy\", \"Axidrol Alloy\", \"Scrap\", \"Smooth Phasmin\", \"Kriller Thermal Laser\", \"Marquise Veridos\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem(localStorageKey);\r\n    if (saved) {\r\n      setCheckedComponents(JSON.parse(saved));\r\n    }\r\n  }, [localStorageKey]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(checkedComponents));\r\n  }, [checkedComponents, localStorageKey]);\r\n\r\n  const handleCheckboxChange = (compName, event) => {\r\n    event.stopPropagation();\r\n    setCheckedComponents((prev) => ({\r\n      ...prev,\r\n      [compName]: !prev[compName],\r\n    }));\r\n  };\r\n\r\n  const visibleComponents = components.filter(\r\n    (c) => c.type !== \"Resource\" && !filteredComponents.includes(c.name)\r\n  );\r\n\r\n  const totalCheckboxes = visibleComponents.reduce(\r\n    (sum, comp) => sum + comp.itemCount,\r\n    0\r\n  );\r\n\r\n  const handleCardClick = () => {\r\n    onSelectionChange(name, !isSelected); // Update the selected state in the parent\r\n  };\r\n\r\n  const handleLinkClick = (event) => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={handleCardClick}\r\n      style={{\r\n        display: \"flex\",\r\n        height: \"75%\",\r\n        alignItems: \"center\",\r\n        flex: \"1 1 300px\",\r\n        maxWidth: \"500px\",\r\n        minWidth: \"300px\",\r\n        padding: \"1rem\",\r\n        position: \"relative\",\r\n        borderRadius: \"8px\",\r\n        boxShadow: \"0 2px 5px rgba(0,0,0,0.1)\",\r\n        backgroundColor: \"#fff\",\r\n        border: isSelected ? \"3px solid #4caf50\" : \"3px solid #ccc\",\r\n        transition: \"border 0.4s ease\",\r\n      }}\r\n    >\r\n      {isSelected && (\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"10px\",\r\n            right: \"10px\",\r\n            fontSize: \"24px\",\r\n            color: \"#4caf50\",\r\n            zIndex: 1,\r\n          }}\r\n        >\r\n          ✔\r\n        </div>\r\n      )}\r\n  \r\n      {/* Inner Content Wrapper with grayscale + dim */}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          filter: isSelected ? \"grayscale(80%) brightness(85%)\" : \"none\",\r\n          transition: \"filter 0.4s ease\",\r\n        }}\r\n      >\r\n        {/* Image Section */}\r\n        <div style={{ flexShrink: 0, marginRight: \"1rem\" }}>\r\n          <img\r\n            src={`https://cdn.warframestat.us/img/${imageName}`}\r\n            alt={name}\r\n            style={{\r\n              width: \"80px\",\r\n              height: \"80px\",\r\n              objectFit: \"cover\",\r\n              borderRadius: \"6px\",\r\n            }}\r\n          />\r\n        </div>\r\n  \r\n        {/* Content Section */}\r\n        <div>\r\n          <h3\r\n            style={{\r\n              margin: \"0 0 0.5rem\",\r\n              wordWrap: \"break-word\",\r\n              overflowWrap: \"break-word\",\r\n              whiteSpace: \"normal\",\r\n            }}\r\n          >\r\n            <a\r\n              href={wiki}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n              onClick={handleLinkClick}\r\n            >\r\n              {name}\r\n            </a>\r\n          </h3>\r\n  \r\n          {totalCheckboxes > 1 && (\r\n            <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\r\n              {visibleComponents.map((comp, compIndex) => {\r\n                const checkboxes = [];\r\n                for (let i = 0; i < comp.itemCount; i++) {\r\n                  const checkboxKey = `${comp.name}-${compIndex}-${i}`;\r\n                  checkboxes.push(\r\n                    <li key={checkboxKey}>\r\n                      <label>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={!!checkedComponents[checkboxKey]}\r\n                          onChange={(event) =>\r\n                            handleCheckboxChange(checkboxKey, event)\r\n                          }\r\n                          onClick={(event) => event.stopPropagation()}\r\n                        />\r\n                        <span style={{ marginLeft: \"0.5rem\" }}>{comp.name}</span>\r\n                      </label>\r\n                    </li>\r\n                  );\r\n                }\r\n                return checkboxes;\r\n              })}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );  \r\n};\r\n\r\nexport default ChecklistCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ChecklistCard from \"./checklistItem.js\";\r\nimport { withPrefix } from \"gatsby\";\r\n\r\nconst WarframesTab = ({ searchQuery, moveSelectedToEnd, hideSelected }) => {\r\n  const [warframes, setWarframes] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState({}); // To store selected cards\r\n\r\n  const localStorageKey = \"warframesKey\";\r\n\r\n  useEffect(() => {\r\n    async function fetchWarframes() {\r\n      const response = await fetch(withPrefix(\"/data/warframes.json\"));\r\n      const data = await response.json();\r\n      const excluded = [\"Helminth\", \"Excalibur Prime\", \"Excalibur Umbra\"];\r\n      const filtered = data.filter(\r\n        (warframe) => !excluded.includes(warframe.name)\r\n      );\r\n      setWarframes(filtered);\r\n    }\r\n\r\n    fetchWarframes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n      const saved = localStorage.getItem(localStorageKey);\r\n      if (saved) {\r\n        setSelectedItems(JSON.parse(saved));\r\n      }\r\n    }, [localStorageKey]);\r\n\r\n  // Update selected items in localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(selectedItems));\r\n  }, [selectedItems]);\r\n\r\n  const handleSelectionChange = (warframeName, isSelected) => {\r\n    setSelectedItems((prev) => ({\r\n      ...prev,\r\n      [warframeName]: isSelected,\r\n    }));\r\n  };\r\n\r\n  let filteredWarframes = warframes.filter((warframe) =>\r\n    warframe.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  if (hideSelected) {\r\n    filteredWarframes = filteredWarframes.filter(\r\n      (wf) => !selectedItems[wf.name]\r\n    );\r\n  }\r\n\r\n  if (moveSelectedToEnd) {\r\n    filteredWarframes.sort((a, b) => {\r\n      const aSelected = selectedItems[a.name] || false;\r\n      const bSelected = selectedItems[b.name] || false;\r\n\r\n      if (aSelected !== bSelected) {\r\n        return aSelected ? 1 : -1; // Unselected first\r\n      }\r\n\r\n      return 0; // Preserve original order\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: \"0 auto\" }}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          gap: \"1rem\",\r\n          justifyContent: \"flex-start\",\r\n          marginInline: \"auto\",\r\n        }}\r\n      >\r\n        {filteredWarframes.map((warframe) => (\r\n          <div key={warframe.uniqueName} style={{ maxWidth: \"340px\" }}>\r\n            <ChecklistCard\r\n              name={warframe.name}\r\n              imageName={warframe.imageName}\r\n              components={warframe.components}\r\n              wiki={warframe.wikiaUrl}\r\n              isSelected={selectedItems[warframe.name] || false}\r\n              onSelectionChange={handleSelectionChange}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WarframesTab;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ChecklistCard from \"./checklistItem.js\";\r\nimport { withPrefix } from \"gatsby\";\r\n\r\nconst WeaponsTab = ({ searchQuery, moveSelectedToEnd, hideSelected }) => {\r\n  const [weapons, setWeapons] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState({}); // Tracks selected items in the parent\r\n\r\n  const localStorageKey = \"weaponsKey\";\r\n\r\n  useEffect(() => {\r\n    async function fetchWeapons() {\r\n      const response = await fetch(withPrefix(\"/data/weapons.json\"));\r\n      const data = await response.json();\r\n      const filtered = data.filter((weapon) => weapon.masterable === true);\r\n      setWeapons(filtered);\r\n    }\r\n\r\n    fetchWeapons();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n        const saved = localStorage.getItem(localStorageKey);\r\n        if (saved) {\r\n          setSelectedItems(JSON.parse(saved));\r\n        }\r\n      }, [localStorageKey]);\r\n  \r\n  // Update selected items in localStorage when changed\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(selectedItems));\r\n  }, [selectedItems]);\r\n\r\n  // This function handles selection/deselection in the parent component\r\n  const handleSelectionChange = (weaponName, isSelected) => {\r\n    setSelectedItems((prev) => ({\r\n      ...prev,\r\n      [weaponName]: isSelected,\r\n    }));\r\n  };\r\n\r\n  let filteredWeapons = weapons.filter((weapon) =>\r\n    weapon.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  if (hideSelected) {\r\n    filteredWeapons = filteredWeapons.filter(\r\n      (wf) => !selectedItems[wf.name]\r\n    );\r\n  }\r\n\r\n  if (moveSelectedToEnd) {\r\n    filteredWeapons.sort((a, b) => {\r\n      const aSelected = selectedItems[a.name] || false;\r\n      const bSelected = selectedItems[b.name] || false;\r\n\r\n      if (aSelected !== bSelected) {\r\n        return aSelected ? 1 : -1; // Unselected first\r\n      }\r\n\r\n      return 0; // Preserve original order\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: \"0 auto\" }}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          gap: \"1rem\",\r\n          justifyContent: \"flex-start\",\r\n          marginInline: \"auto\",\r\n        }}\r\n      >\r\n        {filteredWeapons.map((weapon) => (\r\n          <div key={weapon.uniqueName} style={{ maxWidth: \"330px\" }}>\r\n            <ChecklistCard\r\n              name={weapon.name}\r\n              imageName={weapon.imageName}\r\n              components={weapon.components}\r\n              wiki={weapon.wikiaUrl}\r\n              isSelected={selectedItems[weapon.name] || false} // Pass current selection state\r\n              onSelectionChange={handleSelectionChange} // Pass the callback function to update the parent state\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeaponsTab;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ChecklistCard from \"./checklistItem.js\";\r\nimport { withPrefix } from \"gatsby\";\r\n\r\nconst CompanionsTab = ({ searchQuery, moveSelectedToEnd, hideSelected }) => {\r\n  const [companions, setCompanions] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState({});\r\n\r\n  const localStorageKey = \"companionsKey\";\r\n\r\n  useEffect(() => {\r\n    async function fetchCompanions() {\r\n      const response = await fetch(withPrefix(\"/data/companions.json\"));\r\n      const data = await response.json();\r\n      const filtered = data.filter((companion) => companion.masterable === true);\r\n      setCompanions(filtered);\r\n    }\r\n\r\n    fetchCompanions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n        const saved = localStorage.getItem(localStorageKey);\r\n        if (saved) {\r\n          setSelectedItems(JSON.parse(saved));\r\n        }\r\n      }, [localStorageKey]);\r\n  \r\n  \r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(selectedItems));\r\n  }, [selectedItems]);\r\n\r\n  const handleSelectionChange = (companionName, isSelected) => {\r\n    setSelectedItems((prev) => ({\r\n      ...prev,\r\n      [companionName]: isSelected,\r\n    }));\r\n  };\r\n\r\n  let filteredCompanions = companions.filter((companion) =>\r\n    companion.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  if (hideSelected) {\r\n    filteredCompanions = filteredCompanions.filter(\r\n      (companion) => !selectedItems[companion.name]\r\n    );\r\n  }\r\n\r\n  if (moveSelectedToEnd) {\r\n    filteredCompanions.sort((a, b) => {\r\n      const aSelected = selectedItems[a.name] || false;\r\n      const bSelected = selectedItems[b.name] || false;\r\n\r\n      if (aSelected !== bSelected) {\r\n        return aSelected ? 1 : -1;\r\n      }\r\n\r\n      return 0; // Preserve original order\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: \"0 auto\" }}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          gap: \"1rem\",\r\n          justifyContent: \"flex-start\",\r\n          marginInline: \"auto\",\r\n        }}\r\n      >\r\n        {filteredCompanions.map((companion) => (\r\n          <div key={companion.uniqueName} style={{ maxWidth: \"330px\" }}>\r\n            <ChecklistCard\r\n              name={companion.name}\r\n              imageName={companion.imageName}\r\n              components={companion.components}\r\n              wiki={companion.wikiaUrl}\r\n              isSelected={selectedItems[companion.name] || false}\r\n              onSelectionChange={handleSelectionChange}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanionsTab;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ChecklistCard from \"./checklistItem.js\";\r\nimport { withPrefix } from \"gatsby\";\r\n\r\nconst ArchwingsTab = ({ searchQuery, moveSelectedToEnd, hideSelected }) => {\r\n  const [archwings, setArchwings] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState({});\r\n\r\n  const localStorageKey = \"archwingsKey\";\r\n\r\n  useEffect(() => {\r\n    async function fetchArchwings() {\r\n      const response = await fetch(withPrefix(\"/data/archwing.json\"));\r\n      const data = await response.json();\r\n      setArchwings(data);\r\n    }\r\n\r\n    fetchArchwings();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n        const saved = localStorage.getItem(localStorageKey);\r\n        if (saved) {\r\n          setSelectedItems(JSON.parse(saved));\r\n        }\r\n      }, [localStorageKey]);\r\n  \r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(selectedItems));\r\n  }, [selectedItems]);\r\n\r\n  const handleSelectionChange = (archwingName, isSelected) => {\r\n    setSelectedItems((prev) => ({\r\n      ...prev,\r\n      [archwingName]: isSelected,\r\n    }));\r\n  };\r\n\r\n  let filteredArchwings = archwings.filter((archwing) =>\r\n    archwing.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  if (hideSelected) {\r\n    filteredArchwings = filteredArchwings.filter(\r\n      (archwing) => !selectedItems[archwing.name]\r\n    );\r\n  }\r\n\r\n  if (moveSelectedToEnd) {\r\n    filteredArchwings.sort((a, b) => {\r\n      const aSelected = selectedItems[a.name] || false;\r\n      const bSelected = selectedItems[b.name] || false;\r\n\r\n      if (aSelected !== bSelected) {\r\n        return aSelected ? 1 : -1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: \"0 auto\" }}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          gap: \"1rem\",\r\n          justifyContent: \"flex-start\",\r\n          marginInline: \"auto\",\r\n        }}\r\n      >\r\n        {filteredArchwings.map((archwing) => (\r\n          <div key={archwing.uniqueName} style={{ maxWidth: \"330px\" }}>\r\n            <ChecklistCard\r\n              name={archwing.name}\r\n              imageName={archwing.imageName}\r\n              components={archwing.components}\r\n              wiki={archwing.wikiaUrl}\r\n              isSelected={selectedItems[archwing.name] || false}\r\n              onSelectionChange={handleSelectionChange}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArchwingsTab;\r\n","//@refresh reset\r\nimport React, { useState, useEffect} from \"react\";\r\nimport WarframesTab from \"../components/warframesTab.js\";\r\nimport WeaponsTab from \"../components/weaponsTab.js\";\r\nimport CompanionsTab from \"../components/companionsTab.js\";\r\nimport ArchwingsTab from \"../components/archwingTab.js\";\r\n\r\nconst IndexPage = () => {\r\n  const [selectedTab, setSelectedTab] = useState(\"warframes\");\r\n  const localStorageKey = \"activetab\";\r\n\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const [moveSelectedToEnd, setMoveSelectedToEnd] = useState(false);\r\n  const [hideSelected, setHideSelected] = useState(false);\r\n\r\n  const moveSelectedToEndKey = \"moveSelectedToEnd\";\r\n  const hideSelectedKey = \"hideSelected\";\r\n\r\n  useEffect(() => {\r\n    const moveToEndSaved = localStorage.getItem(moveSelectedToEndKey);\r\n    const hideSaved = localStorage.getItem(hideSelectedKey);\r\n  \r\n    if (moveToEndSaved) {\r\n      setMoveSelectedToEnd(JSON.parse(moveToEndSaved));\r\n    }\r\n  \r\n    if (hideSaved) {\r\n      setHideSelected(JSON.parse(hideSaved));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(moveSelectedToEndKey, JSON.stringify(moveSelectedToEnd));\r\n  }, [moveSelectedToEnd]);\r\n  \r\n  useEffect(() => {\r\n    localStorage.setItem(hideSelectedKey, JSON.stringify(hideSelected));\r\n  }, [hideSelected]);\r\n\r\n  useEffect(() => {\r\n    const savedTab = localStorage.getItem(localStorageKey);\r\n    if(savedTab){\r\n      setSelectedTab(savedTab);\r\n    }\r\n  }, []);\r\n\r\n  const handleTabChange = (tab) => {\r\n    setSelectedTab(tab);\r\n    localStorage.setItem(localStorageKey, tab);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"2rem\", paddingLeft: \"4%\", paddingRight: \"4%\", margin: \"0 auto\" }}>\r\n      <div style={{\r\n        marginBottom: \"1rem\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        gap: \"1rem\",\r\n      }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          style={{\r\n            padding: \"0.5rem 1rem\",\r\n            borderRadius: \"6px\",\r\n            border: \"1px solid #ccc\",\r\n            flexGrow: 1,\r\n            minWidth: \"180px\",\r\n            maxWidth: \"400px\",\r\n          }}\r\n        />\r\n        <div style={{ display: \"flex\", gap: \"1rem\", flexWrap: \"wrap\" }}>\r\n          <button\r\n            onClick={() => handleTabChange(\"warframes\")}\r\n            style={{\r\n              padding: \"0.5rem 1rem\",\r\n              backgroundColor: selectedTab === \"warframes\" ? \"#007bff\" : \"#e0e0e0\",\r\n              color: selectedTab === \"warframes\" ? \"#fff\" : \"#000\",\r\n              border: \"none\",\r\n              borderRadius: \"6px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Warframes\r\n          </button>\r\n          <button\r\n            onClick={() => handleTabChange(\"weapons\")}\r\n            style={{\r\n              padding: \"0.5rem 1rem\",\r\n              backgroundColor: selectedTab === \"weapons\" ? \"#007bff\" : \"#e0e0e0\",\r\n              color: selectedTab === \"weapons\" ? \"#fff\" : \"#000\",\r\n              border: \"none\",\r\n              borderRadius: \"6px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Weapons\r\n          </button>\r\n          <button\r\n            onClick={() => handleTabChange(\"companions\")}\r\n            style={{\r\n              padding: \"0.5rem 1rem\",\r\n              backgroundColor: selectedTab === \"companions\" ? \"#007bff\" : \"#e0e0e0\",\r\n              color: selectedTab === \"companions\" ? \"#fff\" : \"#000\",\r\n              border: \"none\",\r\n              borderRadius: \"6px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Companions\r\n          </button>\r\n          <button\r\n            onClick={() => handleTabChange(\"archwings\")}\r\n            style={{\r\n              padding: \"0.5rem 1rem\",\r\n              backgroundColor: selectedTab === \"archwings\" ? \"#007bff\" : \"#e0e0e0\",\r\n              color: selectedTab === \"archwings\" ? \"#fff\" : \"#000\",\r\n              border: \"none\",\r\n              borderRadius: \"6px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Archwing\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          marginBottom: \"1.5rem\",\r\n          display: \"flex\",\r\n          gap: \"2rem\",\r\n          alignItems: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <label style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={moveSelectedToEnd}\r\n            onChange={(e) => setMoveSelectedToEnd(e.target.checked)}\r\n            style={{ marginRight: \"0.5rem\" }}\r\n          />\r\n          Move selected to end\r\n        </label>\r\n        <label style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={hideSelected}\r\n            onChange={(e) => setHideSelected(e.target.checked)}\r\n            style={{ marginRight: \"0.5rem\" }}\r\n          />\r\n          Hide selected\r\n        </label>\r\n      </div>\r\n\r\n      <div>\r\n        {selectedTab === \"warframes\" && <WarframesTab \r\n          searchQuery={searchQuery}\r\n          moveSelectedToEnd={moveSelectedToEnd}\r\n          hideSelected={hideSelected} />}\r\n        {selectedTab === \"weapons\" && <WeaponsTab \r\n          searchQuery={searchQuery}\r\n          moveSelectedToEnd={moveSelectedToEnd}\r\n          hideSelected={hideSelected}/>}\r\n        {selectedTab === \"companions\" && <CompanionsTab \r\n          searchQuery={searchQuery}\r\n          moveSelectedToEnd={moveSelectedToEnd}\r\n          hideSelected={hideSelected}/>}\r\n        {selectedTab === \"archwings\" && <ArchwingsTab \r\n          searchQuery={searchQuery}\r\n          moveSelectedToEnd={moveSelectedToEnd}\r\n          hideSelected={hideSelected}/>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n"],"names":["_ref","name","imageName","components","wiki","isSelected","onSelectionChange","checkedComponents","setCheckedComponents","useState","localStorageKey","filteredComponents","useEffect","saved","localStorage","getItem","JSON","parse","setItem","stringify","handleCheckboxChange","compName","event","stopPropagation","prev","visibleComponents","filter","c","type","includes","totalCheckboxes","reduce","sum","comp","itemCount","React","onClick","handleCardClick","style","display","height","alignItems","flex","maxWidth","minWidth","padding","position","borderRadius","boxShadow","backgroundColor","border","transition","top","right","fontSize","color","zIndex","flexShrink","marginRight","src","alt","width","objectFit","margin","wordWrap","overflowWrap","whiteSpace","href","target","rel","textDecoration","listStyle","map","compIndex","checkboxes","i","checkboxKey","push","key","checked","onChange","marginLeft","searchQuery","moveSelectedToEnd","hideSelected","warframes","setWarframes","selectedItems","setSelectedItems","async","response","fetch","withPrefix","data","json","excluded","filtered","warframe","fetchWarframes","handleSelectionChange","warframeName","filteredWarframes","toLowerCase","wf","sort","a","b","aSelected","flexWrap","gap","justifyContent","marginInline","uniqueName","ChecklistCard","wikiaUrl","weapons","setWeapons","weapon","masterable","fetchWeapons","weaponName","filteredWeapons","companions","setCompanions","companion","fetchCompanions","companionName","filteredCompanions","archwings","setArchwings","fetchArchwings","archwingName","filteredArchwings","archwing","IndexPage","selectedTab","setSelectedTab","setSearchQuery","setMoveSelectedToEnd","setHideSelected","moveSelectedToEndKey","hideSelectedKey","moveToEndSaved","hideSaved","savedTab","handleTabChange","tab","paddingLeft","paddingRight","marginBottom","placeholder","value","e","flexGrow","cursor","WarframesTab","WeaponsTab","CompanionsTab","ArchwingsTab"],"sourceRoot":""}